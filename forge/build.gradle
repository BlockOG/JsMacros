plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

archivesBaseName = archivesBaseName + "-FORGE"

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"

    include "org.graalvm.sdk:graal-sdk:${project.graal_version}"
    include "org.graalvm.js:js:${project.graal_version}"
    include "org.graalvm.truffle:truffle-api:${project.graal_version}"
    include "org.graalvm.regex:regex:${project.graal_version}"
//		include "org.graalvm.compiler:compiler:${project.graal_version}"
//		include "org.graalvm.compiler:compiler-management:${project.graal_version}"
    include "io.noties:prism4j:${project.prism_version}"
    include "com.neovisionaries:nv-websocket-client:2.10"
    include "org.javassist:javassist:3.28.0-GA"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
